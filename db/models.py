from sqlalchemy import Column, BigInteger, String, Double, Text
from .database import Base

class DailyNotePersonalCareRedacted(Base):
    __tablename__ = 'dailynote_personalcare_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    care_provide = Column(String(255))
    wear_decision = Column(String(255))
    cleaner_type = Column(String(255))
    body_part = Column(String(255))
    dry_by = Column(String(255))
    assistance_detail = Column(String(255))
    hair_wash = Column(Double)
    assistance = Column(BigInteger)
    hair_shave = Column(Double)
    moving_equipment = Column(Double)
    rating_1 = Column(BigInteger)
    rating_2 = Column(Double)
    created_on = Column(String(255), index=True)
    created_by_id = Column(BigInteger, index=True)
    mood_1_id = Column(BigInteger)
    mood_2_id = Column(Double)
    service_user_id = Column(BigInteger, index=True)
    brush_teeth = Column(Double)
    dry_assistance = Column(String(255))
    equipment_used = Column(String(255))
    mouth_wash_used = Column(BigInteger)
    personal_care_carried = Column(String(255))
    su_clothing = Column(String(255))
    wash_type = Column(String(255))
    full_description = Column(Text)
    notes_and_thoughts = Column(String(3603))
    urgency_flag = Column(String(255))
    action_note = Column(String(601))
    marked_read = Column(BigInteger)
    note = Column(String(1137))
    bowel_movement = Column(BigInteger)
    bowel_size = Column(String(255))
    urine_passed = Column(BigInteger)
    bowel_type = Column(Double)
    action_taken = Column(String(494))
    manager_comment = Column(String(272))
    action_reason = Column(String(255))
    action_reason_other = Column(Double)

class ServiceUserRedacted(Base):
    __tablename__ = 'serviceuser_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    start_date = Column(String(255))
    end_date = Column(String(255))
    dob = Column(String(255))
    status = Column(BigInteger)
    care_giver_id = Column(Double)
    created_by_id = Column(BigInteger, index=True)
    auth_user_id = Column(Double)
    created_on = Column(String(255), index=True)
    min_fluid = Column(Double)
    track_fluid = Column(BigInteger)
    flag_bowel = Column(BigInteger)
    age = Column(Double)
    LOS_days = Column(Double)

class DailyNoteMedicationRedacted(Base):
    __tablename__ = 'dailynote_medication_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    created_on = Column(String(255), index=True)
    notes_and_thoughts = Column(String(1294))
    urgency_flag = Column(String(255))
    marked_read = Column(BigInteger)
    action_note = Column(String(273))
    action_taken = Column(String(255))
    manager_comment = Column(String(255))
    created_by_id = Column(BigInteger, index=True)
    service_user_id = Column(BigInteger, index=True)
    full_description = Column(String(2919))
    mood_1_new_id = Column(BigInteger)
    mood_2_new_id = Column(Double)
    rating_1_new = Column(BigInteger)
    rating_2_new = Column(Double)
    consent_refused = Column(BigInteger)
    continueWithoutConsent = Column(BigInteger)
    action_reason = Column(Double)
    action_reason_other = Column(Double)

class DailyNoteAccidentsIncidentsRedacted(Base):
    __tablename__ = 'dailynote_accidentsincidents_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    incident_description = Column(Text)
    incident_time = Column(String(255))
    aggressive = Column(BigInteger)
    toward_su = Column(BigInteger)
    toward_staff = Column(BigInteger)
    call_police = Column(BigInteger)
    call_paramedics = Column(BigInteger)
    call_family = Column(BigInteger)
    reported_to = Column(String(255))
    su_comments = Column(Text)
    resolved = Column(String(2347))
    rating_1 = Column(BigInteger)
    rating_2 = Column(Double)
    created_on = Column(String(255), index=True)
    created_by_id = Column(BigInteger, index=True)
    mood_1_id = Column(BigInteger)
    mood_2_id = Column(Double)
    service_user_id = Column(BigInteger, index=True)
    full_description = Column(Text)
    notes_and_thoughts = Column(Text)
    call_other = Column(BigInteger)
    incident_string = Column(Double)
    who_was_present = Column(String(255))
    urgency_flag = Column(String(255))
    action_note = Column(String(2414))
    marked_read = Column(BigInteger)
    manager_comment = Column(String(817))
    action_reason = Column(String(255))
    action_reason_other = Column(Double)
    transformer_incident_subject = Column(String(255))

class DailyNoteGeneralNoteRedacted(Base):
    __tablename__ = 'dailynote_generalnote_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    full_description = Column(Text)
    note = Column(Text)
    rating_1 = Column(BigInteger)
    rating_2 = Column(Double)
    created_on = Column(String(255), index=True)
    notes_and_thoughts = Column(Text)
    urgency_flag = Column(String(255))
    marked_read = Column(BigInteger)
    action_note = Column(String(587))
    created_by_id = Column(BigInteger, index=True)
    mood_1_id = Column(Double)
    mood_2_id = Column(Double)
    service_user_id = Column(BigInteger, index=True)
    manager_comment = Column(String(598))
    image = Column(Double)
    action_reason = Column(String(255))
    action_reason_other = Column(String(255))

class DailyNoteLeisureActivityRedacted(Base):
    __tablename__ = 'dailynote_leisureactivity_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    activity_type = Column(String(255))
    activity_description = Column(String(1717))
    activity_place = Column(String(255))
    activity_place_description = Column(String(302))
    su_engaged_with = Column(String(255))
    su_requested_take_part_again = Column(BigInteger)
    activity_duration = Column(String(255))
    activity_future_request = Column(String(2288))
    rating_1 = Column(BigInteger)
    rating_2 = Column(Double)
    created_on = Column(String(255), index=True)
    created_by_id = Column(BigInteger, index=True)
    mood_1_id = Column(BigInteger)
    mood_2_id = Column(Double)
    service_user_id = Column(BigInteger, index=True)
    full_description = Column(String(3987))
    notes_and_thoughts = Column(String(3129))
    urgency_flag = Column(String(255))
    action_note = Column(String(255))
    marked_read = Column(BigInteger)
    note = Column(String(820))
    action_taken = Column(String(329))
    manager_comment = Column(Double)
    support_needed = Column(BigInteger)
    action_reason = Column(Double)
    action_reason_other = Column(Double)

class DailyNoteMedicationAdministrationRedacted(Base):
    __tablename__ = 'dailynote_medicationadministration_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    full_description = Column(Double)
    medication_name = Column(String(285))
    blister_pack_usage = Column(BigInteger)
    blister_pack_usage_reason = Column(Double)
    whole_dosage_taken = Column(BigInteger)
    whole_dosage_taken_reason = Column(String(489))
    medication_count = Column(Double)
    medication_count_reason = Column(String(255))
    comment_future_medication = Column(Double)
    note = Column(String(676))
    rating_1 = Column(Double)
    rating_2 = Column(Double)
    warning = Column(String(255))
    warning_reason = Column(Double)
    medication_note_id = Column(BigInteger)
    photo = Column(Double)
    medication_entry_id = Column(Double)
    medication_type = Column(String(255))
    dosage_given = Column(String(255))
    flag_to_manager = Column(BigInteger)

class DailyNoteContactLogRedacted(Base):
    __tablename__ = 'dailynote_contactlog_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    visited_or_called_person = Column(String(255))
    su_interact = Column(BigInteger)
    description = Column(Text)
    addition_comments = Column(Text)
    rating_1 = Column(BigInteger)
    rating_2 = Column(Double)
    created_on = Column(String(255), index=True)
    created_by_id = Column(BigInteger, index=True)
    mood_1_id = Column(BigInteger)
    mood_2_id = Column(Double)
    service_user_id = Column(BigInteger, index=True)
    full_description = Column(Text)
    notes_and_thoughts = Column(String(2854))
    type_of_visit = Column(String(255))
    urgency_flag = Column(String(255))
    action_note = Column(String(495))
    marked_read = Column(BigInteger)
    manager_comment = Column(String(356))
    duration = Column(String(255))
    type_of_contact = Column(String(255))
    action_reason = Column(String(255))
    action_reason_other = Column(Double)

class DailyNoteNightCheckRedacted(Base):
    __tablename__ = 'dailynote_nightcheck_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    sleep_time = Column(String(255))
    wearing_pad = Column(BigInteger)
    bedrails_up = Column(BigInteger)
    woken_up_during_night = Column(BigInteger)
    woken_up_during_night_reason = Column(String(1460))
    rating_1 = Column(Double)
    rating_2 = Column(Double)
    created_on = Column(String(255), index=True)
    created_by_id = Column(BigInteger, index=True)
    mood_1_id = Column(Double)
    mood_2_id = Column(Double)
    service_user_id = Column(BigInteger, index=True)
    full_description = Column(String(1864))
    notes_and_thoughts = Column(String(1371))
    night_check = Column(String(255))
    urgency_flag = Column(String(255))
    bed_time = Column(String(255))
    action_note = Column(String(255))
    marked_read = Column(BigInteger)
    action_taken = Column(Double)
    manager_comment = Column(String(255))
    action_reason = Column(String(255))
    action_reason_other = Column(Double)

class DailyNoteMood(Base):
    __tablename__ = 'dailynote_mood'
    id = Column(BigInteger, primary_key=True, index=True)
    name = Column(String(255))
    image = Column(String(255))
    ordering = Column(Double)
    urgency_flag = Column(Double)

class DailyNoteHealthMonitoringRedacted(Base):
    __tablename__ = 'dailynote_healthmonitoring_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    monitoring_type = Column(String(255))
    rating_1 = Column(BigInteger)
    rating_2 = Column(Double)
    created_on = Column(String(255), index=True)
    created_by_id = Column(BigInteger, index=True)
    mood_1_id = Column(BigInteger)
    mood_2_id = Column(Double)
    service_user_id = Column(BigInteger, index=True)
    full_description = Column(String(2723))
    notes_and_thoughts = Column(String(2086))
    blood_test_reason = Column(String(275))
    blood_test_result = Column(String(255))
    diastolic = Column(Double)
    duration_seizure = Column(String(255))
    glucose_level = Column(String(255))
    heart_rate = Column(String(255))
    heart_rate_notes = Column(String(255))
    heightbmi = Column(String(255))
    other_test_reason = Column(String(296))
    other_test_result = Column(String(260))
    other_test_taken = Column(String(303))
    reason_treatment_foot = Column(String(255))
    seizure_assistance_sought = Column(BigInteger)
    systolic = Column(Double)
    temperature = Column(String(255))
    treatment_foot = Column(String(255))
    type_seizure = Column(String(255))
    weight_foot = Column(String(255))
    weightbmi = Column(String(255))
    wound_care_further_actions = Column(String(268))
    wound_care_image = Column(Double)
    wound_care_location = Column(String(277))
    wound_care_provided = Column(String(257))
    wound_care_size = Column(String(268))
    health_monitor_date = Column(String(255))
    location = Column(String(255))
    measurement_system = Column(String(255))
    refer_to_doctor = Column(BigInteger)
    urgency_flag = Column(String(255))
    action_note = Column(String(255))
    marked_read = Column(BigInteger)
    note = Column(String(643))
    action_taken = Column(String(255))
    illness_symptoms = Column(String(255))
    manager_comment = Column(String(400))
    treatment_details = Column(String(255))
    wound_x_position = Column(Double)
    wound_y_position = Column(Double)
    wound_location_image = Column(String(255))
    action_reason = Column(Double)
    action_reason_other = Column(Double)

class DailyNoteMealRedacted(Base):
    __tablename__ = 'dailynote_meal_redacted'
    id = Column(BigInteger, primary_key=True, index=True)
    meal = Column(String(255))
    prepared = Column(String(255))
    eating_amount = Column(Double)
    eating_method = Column(String(255))
    nutritional_requirements = Column(String(255))
    su_drink = Column(String(255))
    eating_type = Column(String(255))
    comments = Column(Double)
    created_on = Column(String(255), index=True)
    rating_1 = Column(BigInteger)
    rating_2 = Column(Double)
    created_by_id = Column(BigInteger, index=True)
    mood_1_id = Column(BigInteger)
    mood_2_id = Column(Double)
    service_user_id = Column(BigInteger, index=True)
    full_description = Column(String(2577))
    notes_and_thoughts = Column(String(1663))
    food_item = Column(String(255))
    thickener = Column(BigInteger)
    urgency_flag = Column(String(255))
    action_note = Column(String(368))
    marked_read = Column(BigInteger)
    note = Column(String(687))
    drink_amount = Column(String(255))
    meal_type = Column(Double)
    action_taken = Column(String(403))
    manager_comment = Column(String(271))
    drink_total = Column(String(255))
    action_reason = Column(Double)
    action_reason_other = Column(Double)